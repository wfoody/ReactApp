{"version":3,"sources":["reportWebVitals.js","store/reducer.js","components/BaseLayout.js","images/america.jpg","components/About.js","components/Search.js","components/Footer.js","components/Note.js","components/Results.js","components/Search2.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reps","reducer","state","action","type","payload","BaseLayout","props","children","About","className","to","src","logo","alt","href","target","rel","toast","configure","connect","dispatch","onFetchReps","useState","address","setAddress","openMenu","setOpenMenu","ref","useOnclickOutside","handleClickButton","history","useHistory","formattedAddress","split","join","getRepInfoByAddress","fetch","response","ok","json","result","console","log","toResults","push","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","required","onClick","map","suggestion","style","backgroundColor","active","color","description","Footer","Note","Modal","setAppElement","officials","offices","modalIsOpen","setModalIsOpen","official","setOfficial","officeNames","office","officialNames","officialIndices","index","name","party","showOfficialInfo","reverse","normalizedInput","isOpen","onRequestClose","shouldCloseOnOverlayClick","overlay","content","phones","emails","urls","createModel","onError","status","clearSuggestions","shouldFetchSuggestions","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","component","Search2","path","exact","Results","document","getElementById"],"mappings":"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","file":"static/js/main.74e4977f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nconst initialState = {\n    reps: []\n    \n}\n\nconst reducer = (state = initialState, action) => {\n    \n    if(action.type === 'FETCH_REPS') {\n        return {\n            ...state,\n            reps: action.payload\n        }\n    }\n    \n    return state\n}\n\nexport default reducer;\n\n","\nimport React from 'react'\n\nfunction BaseLayout (props) {\n    \n    return (\n        <>         \n            {props.children}\n        </>\n    )\n}\n\nexport default BaseLayout;","export default __webpack_public_path__ + \"static/media/america.cf8db325.jpg\";","\n\nimport logo from '../images/america.jpg'\n// import Footer2 from './Footer2'\nimport './styles/about.css'\nimport { NavLink } from 'react-router-dom'\n\n\nfunction About() {\n\n    return (\n        <div>\n            <div className='aboutLogoDiv'>\n                <NavLink to='/'><img src={logo} className='aboutLogo' alt='American flag' /></NavLink>\n            </div>\n            <div>\n                <p className='aboutContainer'><i><b>REPRESENT</b></i>&nbsp; is a platform designed to connect you with your elected representatives. Using the <a href='https://developers.google.com/civic-information' target=\"_blank\" rel=\"noopener noreferrer\">Google Civic Information API</a> with any U.S. residential address, you have the ability to find and contact the people who represent you at the local, county, state, and federal levels of government.</p>\n            </div>\n            <div>\n            <p className='aboutContainer'>Talking and engaging with your representatives is one of the best ways to effect change in your local community, so reach out to them today with your concerns and <b>let your voice be heard!</b></p>\n            </div>\n            <div className='footerContainerAbout'>\n            <p>Â© 2020 / / REPRESENT</p>\n            <p><NavLink to='/' className='about'>HOME</NavLink></p>\n        </div>\n        </div>\n    )\n}\n\n\nexport default About","import React from 'react'\nimport './styles/search.css'\nimport { useState } from 'react'\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom';\nimport logo from '../images/america.jpg'\nimport { NavLink } from 'react-router-dom'\nimport useOnclickOutside from \"react-cool-onclickoutside\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nfunction Search(props) {\n\n    const [address, setAddress] = useState(\"\")\n\n    const [openMenu, setOpenMenu] = useState(false)\n\n    const ref = useOnclickOutside(() => {\n        setOpenMenu(false);\n    })\n\n    const handleClickButton = () => {\n        setOpenMenu(!openMenu);\n    }\n\n    const history = useHistory()\n\n    let formattedAddress = address.split(\" \").join(\"%20\")\n\n\n    const getRepInfoByAddress = () => {\n\n        fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=AIzaSyDatTrCAc_AsUpv-RrJ1uT-a9kvyF6SJS8&address=${formattedAddress}`)\n            .then(response => { \n                if (!response.ok) {\n                    throw toast('Please enter a valid US address!', {\n                        className: \"customToast\"\n                    }\n                )} return response.json()    \n            })\n            .then(result => {\n                console.log(result)\n                props.onFetchReps(result)\n            }).then(() => toResults());\n    }\n\n    const toResults = () => {\n        history.push('/results')\n    }\n\n\n    return (\n\n        <div className='wholeComponent'>\n            <h1 className='searchTitle'><NavLink to='/' className='searchTitle'>REPRESENT</NavLink></h1>\n            <img src={logo} className='searchLogo' alt='American flag'/>\n\n            <div>\n                <PlacesAutocomplete\n                    value={address}\n                    onChange={setAddress}\n                    onSelect={setAddress}\n                    className='boxAndSuggestions'>\n\n\n\n                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <div>\n                            <div className='inputAndButton'>\n                                <input type='text' className='inputText' {...getInputProps({ placeholder: \"ENTER ADDRESS TO FIND YOUR REPRESENTATIVES\" })} required />\n                                <button onClick={getRepInfoByAddress} className='searchButton'>SEARCH</button>\n                            </div>\n                            <div>\n                                <div onClick={handleClickButton}></div>\n                                {openMenu && <div ref={ref}></div>}\n                            </div>\n                            <div>\n                                {loading ? <div>...loading</div> : null}\n\n                                {suggestions.map((suggestion) => {\n                                    const style = {\n                                        backgroundColor: suggestion.active ? \"#0e448b\" : \"#fff\",\n                                        color: suggestion.active ? \"#fff\" : \"#000000\"\n                                    }\n                                    return (\n                                        <div\n                                            {...getSuggestionItemProps(suggestion, { style })} className='dropdownItem' >\n                                            {suggestion.description}\n\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    )}\n                </PlacesAutocomplete>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        reps: state.reps\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchReps: (reps) => dispatch({\n            type: 'FETCH_REPS',\n            payload: reps\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","\nimport './styles/footer.css'\nimport { NavLink } from 'react-router-dom'\n\nfunction Footer() {\n\n    return (\n        <div className='footerContainer'>\n            <p>Â© 2020 / / REPRESENT</p>\n            <p><NavLink to='/about' className='about'>ABOUT</NavLink></p>\n        </div>\n    )\n}\n\nexport default Footer","\nimport './styles/note.css'\n\n\n\nfunction Note() {\n\n    return <div className='note'><b><u>Note:</u></b>  All data is retrieved from the <a href='https://developers.google.com/civic-information' target=\"_blank\" rel=\"noopener noreferrer\">Google Civic Information API</a>.  If you notice incorrect or missing data, please report it to <a href='https://docs.google.com/forms/d/e/1FAIpQLScFpFTOkTpm0YoerLLprY_ySS9PRXLsu27SM01hebHqkefW2Q/viewform' target=\"_blank\" rel=\"noopener noreferrer\">Google</a>.</div>\n}\n\nexport default Note","\nimport { connect } from 'react-redux'\nimport Search from './Search'\nimport './styles/results.css'\nimport Modal from 'react-modal'\nimport { useState } from 'react'\nimport Footer from './Footer'\nimport Note from './Note'\n\nModal.setAppElement('#root')\n\n\nfunction Results(props) {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    const [official, setOfficial] = useState(null)\n\n    const createModel = () => {\n\n        if (official != null) {\n\n            return (\n\n                <Modal\n                    isOpen={modalIsOpen}\n                    onRequestClose={() => setModalIsOpen(false)}\n                    shouldCloseOnOverlayClick={true}\n\n                    style={\n                        {\n                            overlay: {\n                                backgroundColor: null\n                            },\n                            content: {\n                                backgroundColor: \"#e0e7f0\"\n                            }\n                        }\n                    }\n                    className='contactModal'>\n\n\n                    <p className='contactTitle'><b>Contact {official.name}</b></p>\n                    <a href={official.phones ? 'tel:' + official.phones[0] : null} className='phoneNumber'>{official.phones[0]}</a>\n                    <a href={official.emails ? 'mailto: ' + official.emails[0] : null} target=\"_blank\" rel=\"noopener noreferrer\" className='contactEmail'>{official.emails ? official.emails[0] : null}</a>\n                    <a href={official.urls ? official.urls[0] : null} target=\"_blank\" rel=\"noopener noreferrer\" className='contactUrl'>{official.urls ? official.urls[0] : null}</a>\n\n                    <div>\n                        <button onClick={() => setModalIsOpen(false)} className='modalButton'>Close</button>\n                    </div>\n\n                </Modal>\n\n            )\n        }\n\n    }\n\n    const showOfficialInfo = (official) => {\n        setModalIsOpen(true)\n        setOfficial(official)\n        //setModalIsOpen(true)\n    }\n\n    const officeNames = props.offices.map(office => {\n\n        let officialNames = office.officialIndices.map(index => {\n            let official = props.officials[index]\n\n\n            return (\n\n                <div className='nameAndContact'>\n\n                    <li>{official.name} <span className='partyName'>({official.party})</span></li>\n\n                    <button onClick={() => showOfficialInfo(official)} className='contactButton'>Contact</button>\n\n                </div>\n            )\n\n\n        }).reverse()\n\n        return (\n            <div>\n                <h1 className='officeName'>{office.name}</h1>\n                <ul className='officialName'>{officialNames}</ul>\n                <hr></hr>\n\n            </div>\n        )\n    }).reverse()\n\n    return (\n        <div className='resultsContainer'>\n            <Search />\n            {/* <div>{officialNames}</div><br></br> */}\n            <div key={props.officials.normalizedInput} className='results'>{officeNames}</div>\n            {createModel()}\n            <div className='noteAndFooter'>\n                <Note />\n\n                <Footer />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return ({\n        officials: state.reps.officials,\n        offices: state.reps.offices\n    })\n}\n\n\nexport default connect(mapStateToProps)(Results)","import React from 'react'\nimport './styles/search.css'\nimport { useState } from 'react'\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom';\nimport logo from '../images/america.jpg'\nimport { NavLink } from 'react-router-dom'\nimport useOnclickOutside from \"react-cool-onclickoutside\";\nimport Footer from './Footer';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nfunction Search(props) {\n\n    const [address, setAddress] = useState(\"\")\n\n    const [openMenu, setOpenMenu] = useState(false)\n\n    const ref = useOnclickOutside(() => {\n        setOpenMenu(false);\n    })\n\n    const handleClickButton = () => {\n        setOpenMenu(!openMenu);\n    }\n\n    const history = useHistory()\n\n    let formattedAddress = address.split(\" \").join(\"%20\")\n\n\n    const getRepInfoByAddress = () => {\n\n\n        fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=AIzaSyDatTrCAc_AsUpv-RrJ1uT-a9kvyF6SJS8&address=${formattedAddress}`)\n            .then(response => { \n                if (!response.ok) {\n                    // throw alert('Please enter valid US address');\n                    throw toast('Please enter a valid US address!', {\n                        className: \"customToast\"\n                    });\n\n                  }\n                  return response.json()\n            })\n            .then(result => {\n                console.log(result)\n                props.onFetchReps(result)\n            }).then(() => toResults());\n    }\n\n    const toResults = () => {\n        history.push('/results')\n    }\n\n    const onError = (status, clearSuggestions) => {\n        console.log('google maps returned error: ', status)\n        clearSuggestions()\n    }\n\n  \n    return (\n\n        <div className='wholeComponent'>\n            <h1 className='searchTitle'><NavLink to='/' className='searchTitle'>REPRESENT</NavLink></h1>\n            <img src={logo} className='searchLogo' alt='American flag'/>\n\n            <div>\n                <PlacesAutocomplete\n                    value={address}\n                    onChange={setAddress}\n                    onSelect={setAddress}\n                    onError={onError}\n                    shouldFetchSuggestions={true}\n                    className='boxAndSuggestions'>\n\n\n\n                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <div>\n                            <div className='inputAndButton'>\n                                <input type='text' className='inputText' {...getInputProps({ placeholder: \"ENTER ADDRESS TO FIND YOUR REPRESENTATIVES\" })} required />\n                                <button onClick={getRepInfoByAddress} className='searchButton'>SEARCH</button>\n                            </div>\n                            <div>\n                                <div onClick={handleClickButton}></div>\n                                {openMenu && <div ref={ref}></div>}\n                            </div>\n                            <div>\n                                {loading ? <div>...loading</div> : null}\n\n                                {suggestions.map((suggestion) => {\n                                    const style = {\n                                        backgroundColor: suggestion.active ? \"#0e448b\" : \"#fff\",\n                                        color: suggestion.active ? \"#fff\" : \"#000000\"\n                                    }\n                                    return (\n                                        <div\n                                            {...getSuggestionItemProps(suggestion, { style })} className='dropdownItem' >\n                                            {suggestion.description}\n\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    )}\n                </PlacesAutocomplete>\n            </div>\n            <div className='footer'>\n            <Footer />\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        reps: state.reps\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchReps: (reps) => dispatch({\n            type: 'FETCH_REPS',\n            payload: reps\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport reducer from './store/reducer';\nimport { Provider } from 'react-redux';\nimport BaseLayout from './components/BaseLayout';\nimport About from './components/About';\nimport Results from './components/Results';\nimport Search2 from './components/Search2';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <BaseLayout>\n          <Switch>\n            <Route component={Search2} path=\"/\" exact />\n            <Route component={About} path=\"/about\" />\n            <Route component={Results} path=\"/results\" />\n\n          </Switch>\n        </BaseLayout>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}