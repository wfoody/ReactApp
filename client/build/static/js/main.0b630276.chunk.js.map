{"version":3,"sources":["reportWebVitals.js","store/reducer.js","components/BaseLayout.js","images/america.jpg","components/About.js","components/Search.js","components/Footer.js","components/Note.js","components/Results.js","components/Search2.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reps","reducer","state","action","type","payload","BaseLayout","props","children","About","className","to","src","logo","alt","href","target","rel","toast","configure","connect","dispatch","onFetchReps","useState","address","setAddress","openMenu","setOpenMenu","ref","useOnclickOutside","handleClickButton","history","useHistory","formattedAddress","split","join","getRepInfoByAddress","fetch","response","ok","json","result","console","log","toResults","push","handleKeyPress","e","keyCode","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","required","onKeyUp","onClick","map","suggestion","style","backgroundColor","active","color","description","Footer","Note","Modal","setAppElement","officials","offices","modalIsOpen","setModalIsOpen","official","setOfficial","officeNames","office","officialNames","officialIndices","index","name","party","showOfficialInfo","reverse","normalizedInput","isOpen","onRequestClose","shouldCloseOnOverlayClick","overlay","content","phones","emails","urls","createModal","onError","status","clearSuggestions","shouldFetchSuggestions","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","component","Search2","path","exact","Results","document","getElementById"],"mappings":"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","file":"static/js/main.0b630276.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    reps: []\n}\n\nconst reducer = (state = initialState, action) => {\n    if (action.type === 'FETCH_REPS') {\n        return {\n            ...state,\n            reps: action.payload\n        }\n    }\n    return state\n}\n\nexport default reducer;\n\n","import React from 'react';\n\nfunction BaseLayout(props) {\n\n    return (\n        <>\n            {props.children}\n        </>\n    )\n}\n\nexport default BaseLayout;","export default __webpack_public_path__ + \"static/media/america.cf8db325.jpg\";","import logo from '../images/america.jpg';\nimport './styles/about.css';\nimport { NavLink } from 'react-router-dom';\n\n\nfunction About() {\n\n    return (\n        <div className='aboutBodyContainer'>\n            <div className='aboutLogoDiv'>\n                <NavLink to='/'><img src={logo} className='aboutLogo' alt='American flag' /></NavLink>\n            </div>\n            <div>\n                <p className='aboutContainer'><i><b>REPRESENT</b></i>&nbsp; is a platform designed to connect you with your elected representatives. Using the <a href='https://developers.google.com/civic-information' target=\"_blank\" rel=\"noopener noreferrer\">Google Civic Information API</a> with any U.S. residential address, you have the ability to find and contact the people who represent you at the local, county, state, and federal levels of government.</p>\n            </div>\n            <div>\n                <p className='aboutContainer2'>Talking and engaging with your representatives is one of the best ways to effect change in your local community, so reach out to them today with your concerns and <b>let your voice be heard!</b></p>\n            </div>\n            <div className='footerContainerAbout'>\n                <p>Â© 2024 / / REPRESENT</p>\n                <p><NavLink to='/' className='about'>HOME</NavLink></p>\n            </div>\n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\nimport './styles/search.css';\nimport { useState } from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport logo from '../images/america.jpg';\nimport { NavLink } from 'react-router-dom';\nimport useOnclickOutside from \"react-cool-onclickoutside\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nfunction Search(props) {\n\n    const [address, setAddress] = useState(\"\");\n    const [openMenu, setOpenMenu] = useState(false);\n\n    const ref = useOnclickOutside(() => {\n        setOpenMenu(false);\n    });\n\n    const handleClickButton = () => {\n        setOpenMenu(!openMenu);\n    };\n\n    const history = useHistory();\n\n    let formattedAddress = address.split(\" \").join(\"%20\");\n\n\n    const getRepInfoByAddress = () => {\n\n        fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=AIzaSyDatTrCAc_AsUpv-RrJ1uT-a9kvyF6SJS8&address=${formattedAddress}`)\n            .then(response => {\n                if (!response.ok) {\n                    throw toast('Please enter a valid US address!', {\n                        className: \"customToast\"\n                    }\n                    )\n                } return response.json()\n            })\n            .then(result => {\n                console.log(result)\n                props.onFetchReps(result)\n            }).then(() => toResults());\n    };\n\n    const toResults = () => {\n        history.push('/results')\n    };\n\n    function handleKeyPress(e) {\n        if (e.keyCode === 13) {\n            getRepInfoByAddress();\n        }\n    };\n\n    return (\n        <div className='wholeComponentResults'>\n            <h1 className='searchTitle'><NavLink to='/' className='searchTitle'>REPRESENT</NavLink></h1>\n            <img src={logo} className='searchLogo' alt='American flag' />\n            <div>\n                <PlacesAutocomplete\n                    value={address}\n                    onChange={setAddress}\n                    onSelect={setAddress}\n                    className='boxAndSuggestions'>\n\n                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <div>\n                            <div className='inputAndButton'>\n                                <input type='text' className='inputText' {...getInputProps({ placeholder: \"ENTER ADDRESS TO FIND YOUR REPRESENTATIVES\" })} required onKeyUp={handleKeyPress} />\n                                <button onClick={getRepInfoByAddress} className='searchButton'>SEARCH</button>\n                            </div>\n                            <div>\n                                <div onClick={handleClickButton}></div>\n                                {openMenu && <div ref={ref}></div>}\n                            </div>\n                            <div>\n                                {loading ? <div className='loading'>...loading</div> : null}\n\n                                {suggestions.map((suggestion) => {\n                                    const style = {\n                                        backgroundColor: suggestion.active ? \"#0e448b\" : \"#fff\",\n                                        color: suggestion.active ? \"#fff\" : \"#000000\"\n                                    }\n                                    return (\n                                        <div\n                                            {...getSuggestionItemProps(suggestion, { style })} className='dropdownItem' >\n                                            {suggestion.description}\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    )}\n                </PlacesAutocomplete>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        reps: state.reps\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchReps: (reps) => dispatch({\n            type: 'FETCH_REPS',\n            payload: reps\n        })\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import './styles/footer.css';\nimport { NavLink } from 'react-router-dom';\n\nfunction Footer() {\n\n    return (\n        <div className='footerContainer'>\n            <p>Â© 2024 / / REPRESENT</p>\n            <p><NavLink to='/about' className='about'>ABOUT</NavLink></p>\n        </div>\n    )\n}\n\nexport default Footer;","import './styles/note.css';\n\nfunction Note() {\n\n    return (\n        <div className='note'>\n            <b><u>Note:</u></b>  All data is retrieved from the <a href='https://developers.google.com/civic-information' target=\"_blank\" rel=\"noopener noreferrer\">Google Civic Information API</a>.  If you notice incorrect or missing data, please report it to <a href='https://docs.google.com/forms/d/e/1FAIpQLScFpFTOkTpm0YoerLLprY_ySS9PRXLsu27SM01hebHqkefW2Q/viewform' target=\"_blank\" rel=\"noopener noreferrer\">Google</a>.\n        </div>\n    )\n}\n\nexport default Note;","import { connect } from 'react-redux';\nimport Search from './Search';\nimport './styles/results.css';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport Footer from './Footer';\nimport Note from './Note';\n\nModal.setAppElement('#root')\n\nfunction Results(props) {\n\n    const [modalIsOpen, setModalIsOpen] = useState(false)\n    const [official, setOfficial] = useState(null)\n\n    const createModal = () => {\n\n        if (official != null) {\n            return (\n                <Modal\n                    isOpen={modalIsOpen}\n                    onRequestClose={() => setModalIsOpen(false)}\n                    shouldCloseOnOverlayClick={true}\n                    style={\n                        {\n                            overlay: {\n                                backgroundColor: null\n                            },\n                            content: {\n                                backgroundColor: \"#e0e7f0\"\n                            }\n                        }\n                    }\n                    className='contactModal'>\n\n                    <p className='contactTitle'><b>Contact {official.name}</b></p>\n                    <a href={official.phones ? 'tel:' + official.phones[0] : null} className='phoneNumber'>{official.phones[0]}</a>\n                    <a href={official.emails ? 'mailto: ' + official.emails[0] : null} target=\"_blank\" rel=\"noopener noreferrer\" className='contactEmail'>{official.emails ? official.emails[0] : null}</a>\n                    <a href={official.urls ? official.urls[0] : null} target=\"_blank\" rel=\"noopener noreferrer\" className='contactUrl'>{official.urls ? official.urls[0] : null}</a>\n\n                    <div>\n                        <button onClick={() => setModalIsOpen(false)} className='modalButton'>Close</button>\n                    </div>\n\n                </Modal>\n            )\n        }\n\n    }\n\n    const showOfficialInfo = (official) => {\n        setModalIsOpen(true)\n        setOfficial(official)\n    }\n\n    const officeNames = props.offices.map(office => {\n\n        let officialNames = office.officialIndices.map(index => {\n            let official = props.officials[index]\n\n            return (\n                <div className='nameAndContact'>\n                    <li>{official.name} <span className='partyName'>({official.party})</span></li>\n                    <button onClick={() => showOfficialInfo(official)} className='contactButton'>Contact</button>\n                </div>\n            )\n        }).reverse()\n\n        return (\n            <div>\n                <h1 className='officeName'>{office.name}</h1>\n                <ul className='officialName'>{officialNames}</ul>\n                <hr></hr>\n            </div>\n        )\n    }).reverse()\n\n    return (\n        <div className='resultsContainer'>\n            <Search />\n            <div key={props.officials.normalizedInput} className='results'>{officeNames}</div>\n            {createModal()}\n            <div className='noteAndFooter'>\n                <Note />\n                <Footer />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return ({\n        officials: state.reps.officials,\n        offices: state.reps.offices\n    })\n}\n\nexport default connect(mapStateToProps)(Results);\n","import React from 'react';\nimport './styles/search.css';\nimport { useState } from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport logo from '../images/america.jpg';\nimport { NavLink } from 'react-router-dom';\nimport useOnclickOutside from \"react-cool-onclickoutside\";\nimport Footer from './Footer';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nfunction Search(props) {\n\n    const [address, setAddress] = useState(\"\");\n    const [openMenu, setOpenMenu] = useState(false);\n\n    const ref = useOnclickOutside(() => {\n        setOpenMenu(false);\n    });\n\n    const handleClickButton = () => {\n        setOpenMenu(!openMenu);\n    };\n\n    const history = useHistory();\n\n    let formattedAddress = address.split(\" \").join(\"%20\");\n\n\n    const getRepInfoByAddress = () => {\n\n\n        fetch(`https://www.googleapis.com/civicinfo/v2/representatives?key=AIzaSyDatTrCAc_AsUpv-RrJ1uT-a9kvyF6SJS8&address=${formattedAddress}`)\n            .then(response => {\n                if (!response.ok) {\n                    throw toast('Please enter a valid US address!', {\n                        className: \"customToast\"\n                    })\n                }\n                return response.json()\n            })\n            .then(result => {\n                console.log(result)\n                props.onFetchReps(result)\n            }).then(() => toResults());\n    };\n\n    const toResults = () => {\n        history.push('/results')\n    };\n\n    const onError = (status, clearSuggestions) => {\n        console.log('google maps returned error: ', status)\n        clearSuggestions()\n    };\n\n    function handleKeyPress(e) {\n        if (e.keyCode === 13) {\n            getRepInfoByAddress();\n        }\n    };\n\n    return (\n        <div className='wholeComponent'>\n            <h1 className='searchTitle'><NavLink to='/' className='searchTitle'>REPRESENT</NavLink></h1>\n            <img src={logo} className='searchLogo' alt='American flag' />\n            <div>\n                <PlacesAutocomplete\n                    value={address}\n                    onChange={setAddress}\n                    onSelect={setAddress}\n                    onError={onError}\n                    shouldFetchSuggestions={true}\n                    className='boxAndSuggestions'>\n\n                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <div>\n                            <div className='inputAndButton'>\n                                <input type='text' className='inputText' {...getInputProps({ placeholder: \"ENTER ADDRESS TO FIND YOUR REPRESENTATIVES\" })} required onKeyUp={handleKeyPress} />\n                                <button onClick={getRepInfoByAddress} className='searchButton'>SEARCH</button>\n                            </div>\n                            <div>\n                                <div onClick={handleClickButton}></div>\n                                {openMenu && <div ref={ref}></div>}\n                            </div>\n                            <div>\n                                {loading ? <div className='loading'>...loading</div> : null}\n\n                                {suggestions.map((suggestion) => {\n                                    const style = {\n                                        backgroundColor: suggestion.active ? \"#0e448b\" : \"#fff\",\n                                        color: suggestion.active ? \"#fff\" : \"#000000\"\n                                    }\n                                    return (\n                                        <div\n                                            {...getSuggestionItemProps(suggestion, { style })} className='dropdownItem' >\n                                            {suggestion.description}\n\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    )}\n                </PlacesAutocomplete>\n            </div>\n            <div className='footer'>\n                <Footer />\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        reps: state.reps\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchReps: (reps) => dispatch({\n            type: 'FETCH_REPS',\n            payload: reps\n        })\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { createStore } from 'redux'\nimport reducer from './store/reducer';\nimport { Provider } from 'react-redux';\nimport BaseLayout from './components/BaseLayout';\nimport About from './components/About';\nimport Results from './components/Results';\nimport Search2 from './components/Search2';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <BaseLayout>\n          <Switch>\n            <Route component={Search2} path=\"/\" exact />\n            <Route component={About} path=\"/about\" />\n            <Route component={Results} path=\"/results\" />\n          </Switch>\n        </BaseLayout>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}